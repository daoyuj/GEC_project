#!/usr/bin/env python
# coding: utf-8

# In[161]:


#initialize

#!/usr/bin/env python
# coding: utf-8

#initialize

list_score = {}    # song_name, score
try:
    file = open('record.txt', 'r')
    for i in file.readlines():
        list_tt = {}
        str_try = i.strip()
        str_try = str_try.split(":{")
        ele = str_try[1].split("}")
        ele = ele[0].split(", ")
        for i in ele:
            if len(i) != 0:
                tmp = i.split(": ")
                key = tmp[0][1:-1]
                list_tt[key] = int(tmp[1])
        list_score[str_try[0]] = list_tt
    file.close()         
    print("load file successfully. welcome back")
except FileNotFoundError:
    print("hello this is your first time")


#install file
def install_file(file_):
    list_ = []
    score = {}
    
    file_name = file_ + '.txt'
    f = open(file_name, 'r', encoding='utf-8')
    
    for i in f.readlines():
        list_ += [i.strip()]
    
    for i in list_:
        log = False
        for logic in i:
            if logic == "|":
                log = True
                break
        if not log:
            continue
        tmp = i.split("\xa0")
        for j in tmp:
            tmp_2 = j.split(" ")
            for k in tmp_2:
                tmp_3 = k.split("|")
                for l in tmp_3:
                    tmp_4 = l.split("\n")
                    for m in tmp_4:
                        if len(m) == 0:
                            continue
                        if m[0] not in {'A', 'B', 'C', 'D', 'E', 'F', 'G'}:
                            continue
                        if m not in score:
                            score[m] = 1
                        else:
                            score[m] += 1
    score = dict(sorted(score.items(), key=lambda x: x[1], reverse=True))
    f.close()
    if len(score) == 0:
        install_file2(file_)
    list_score[file_name] = score
            

def install_file2(file_):
    list_ = []
    score = {}
    
    file_name = file_ + '.txt'
    f = open(file_name, 'r', encoding='utf-8')
    
    for i in f.readlines():
        list_ += [i.strip()]
    
    for i in list_:
        log = False
        for logic in i:
            if logic.isalpha():
                log = True
                break
        if not log:
            continue
        
        tmp = i.split()
        for chord in tmp:
            if chord[0] not in {'A', 'B', 'C', 'D', 'E', 'F', 'G'}:
                continue
            if chord not in score:
                score[chord] = 1
            else:
                score[chord] += 1
    
    score = dict(sorted(score.items(), key=lambda x: x[1], reverse=True))
    list_score[file_name] = score
    f.close()


#practice
def practice(list_):
    list_ = list_.split(", ")
    play_list = {}
    song = list_score.keys()
    for j in list_:
        for i in song:
            song_score = list_score[i].keys()
            if j in song_score:
                if i not in play_list:
                    play_list[i] = j
                else:
                    play_list[i] = str(play_list[i]) + ", " + str(j)
    print("song you can play and target score they contain:")
    for i in play_list.keys():
        print(i, ":", play_list[i])


#show all of your song
def show():
    if len(list_score) == 0:
        print("you don't have any song")
        return
    for i in list_score.keys():
        print(i, ":")
        for j in list_score[i].keys():
            print(j, ":", list_score[i][j])


#close program, write data to txt
def close_program():
    file_name = "record.txt"
    with open(file_name, 'w') as f:
        for i in list_score.keys():
            str_ = i
            str_ += ":"
            str_ += str(list_score[i])
            str_ += '\n'
            f.write(str_)


#main
while True:
    command = input("enter your command:")
    if command == "install":
        file_name = input("enter file name: (you don't need to enter .txt)")
        install_file(file_name)
    elif command == "practice":
        list_practice = input("enter which score you want to practice: (format: score1, score2, score3, ...)")
        practice(list_practice)
    elif command == "show":
        show()
    elif command == "close":
        close_program()
        break
        
print("byebye")
